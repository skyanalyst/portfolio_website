"use strict";

exports.__esModule = true;
exports.getDataStore = getDataStore;
var _createRequireFromPath = require("./../core-utils/create-require-from-path");
var _redux = require("../redux");
let dataStore;
function getDataStore() {
  if (!dataStore) {
    const {
      setupLmdbStore
    } = require(`./lmdb/lmdb-datastore`);
    dataStore = setupLmdbStore();
  }
  return dataStore;
}
const gatsbyRedux = (0, _createRequireFromPath.requireFromInstalledGatsbyDist)(`redux/index.js`);

// this will log twice if we're hooking into the gatsby emitter
if (!(gatsbyRedux !== null && gatsbyRedux !== void 0 && gatsbyRedux.emitter)) {
  // It is possible that the store is not initialized yet when calling `DELETE_CACHE`.
  //  The code below ensures we wipe cache from the proper store
  //  (mostly relevant for tests)
  _redux.emitter.on(`DELETE_CACHE`, () => {
    getDataStore();
  });
}
//# sourceMappingURL=datastore.js.map