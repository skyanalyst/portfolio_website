{"version":3,"file":"controllable-script.js","names":["getDebugPort","port","getDebugInfo","program","Object","prototype","hasOwnProperty","call","inspect","break","inspectBrk","ControllableScript","constructor","script","debugInfo","maybeKillZombie","processName","directory","dirname","path","join","pidFileName","fs","existsSync","pid","readFileSync","setTimeout","process","kill","Number","console","info","e","start","options","env","cwd","args","md5","tmpFileName","outputFileSync","isRunning","push","defaultExecArgv","execArgv","filter","arg","startsWith","execa","node","FORCE_COLOR","GATSBY_NODE_GLOBALS","JSON","stringify","global","__GATSBY","NODE_ENV","stdio","nodeOptions","stdout","stderr","Error","pipe","pidDir","ensureDirSync","writeFileSync","toString","stop","signal","code","killTimeout","killWith","send","type","action","payload","err","Promise","resolve","on","removeAllListeners","clearTimeout","undefined","onMessage","callback","offMessage","off","onExit","offExit","msg","isRestarting","exampleImpl","buildId","v4","root","parseInt","developProcessPath","slash","require","detectPortInUseAndPrompt","host","message","exit","developPort","https","reporter","panic","sslHost","ssl","getSslCert","name","caFile","certFile","keyFile","developProcess","proxyPort","handleChildProcessIPC","shutdownServices","_code","services","all","catch","then"],"sources":["../../src/utils/controllable-script.ts"],"sourcesContent":["import path from \"path\"\nimport { ChildProcess } from \"child_process\"\nimport execa from \"execa\"\nimport { detectPortInUseAndPrompt } from \"../utils/detect-port-in-use-and-prompt\"\nimport fs from \"fs-extra\"\nimport onExit from \"signal-exit\"\nimport { v4 } from \"../core-utils/uuid\"\nimport { md5, slash } from \"../core-utils\"\nimport reporter from \"../reporter\"\nimport { getSslCert } from \"../utils/get-ssl-cert\"\nimport { IProgram, IDebugInfo } from \"./../commands/types\"\n\n// Return a user-supplied port otherwise the default Node.js debugging port\nconst getDebugPort = (port?: number): number => port ?? 9229\n\nexport const getDebugInfo = (program: IProgram): IDebugInfo | null => {\n  if (Object.prototype.hasOwnProperty.call(program, `inspect`)) {\n    return {\n      port: getDebugPort(program.inspect),\n      break: false,\n    }\n  } else if (Object.prototype.hasOwnProperty.call(program, `inspectBrk`)) {\n    return {\n      port: getDebugPort(program.inspectBrk),\n      break: true,\n    }\n  } else {\n    return null\n  }\n}\n\nexport class ControllableScript {\n  public process?: ChildProcess\n  private script\n  private debugInfo: IDebugInfo | null\n  public isRunning\n\n  constructor(script, debugInfo: IDebugInfo | null) {\n    this.script = script\n    this.debugInfo = debugInfo\n  }\n\n  // todo this is kinda naive. if multiple processes start with the same name, we possibly wont get them all due to a race condition. this only works when starting multiple subprocesses in the same process without calling .stop() in between. We'd need to use a lockfile or something to make this work reliably across processes.\n  maybeKillZombie(processName: string, directory: string) {\n    const dirname = path.join(directory, `.cache`)\n    const pidFileName = dirname + `/pids/${processName}.pid`\n\n    if (fs.existsSync(pidFileName)) {\n      const pid = fs.readFileSync(pidFileName, `utf-8`)\n      if (pid) {\n        setTimeout(() => {\n          try {\n            process.kill(Number(pid), `SIGKILL`)\n            console.info(\n              `[content-engine] killing zombie process ${pid} for ${processName}. You may need to ensure you're calling engine.stop() when you're done.`\n            )\n          } catch (e) {\n            // ignore if kill fails, maybe it's already dead, maybe we don't own the process for some reason\n          }\n          // wait 100ms to give the process a chance to die on its own incase we just restarted it\n        }, 100)\n      }\n    }\n  }\n\n  start(options?: { env?: Record<string, string>; directory?: string }): void {\n    if (!options) {\n      options = {}\n    }\n\n    if (!options.env) {\n      options.env = {}\n    }\n\n    if (!options.directory) {\n      options.directory = process.cwd()\n    }\n\n    const args: Array<string> = []\n\n    const dirname = path.join(options.directory, `.cache`)\n    const processName = `content-engine-process-${md5(dirname)}`\n    const tmpFileName = path.join(dirname, `${processName}.cjs`)\n\n    this.maybeKillZombie(processName, options.directory)\n\n    fs.outputFileSync(tmpFileName, this.script)\n    this.isRunning = true\n    // Passing --inspect isn't necessary for the child process to launch a port but it allows some editors to automatically attach\n    if (this.debugInfo) {\n      if (this.debugInfo.break) {\n        args.push(`--inspect-brk=${this.debugInfo.port}`)\n      } else {\n        args.push(`--inspect=${this.debugInfo.port}`)\n      }\n    }\n\n    const defaultExecArgv = process.execArgv.filter(\n      arg => !arg.startsWith(`--inspect`)\n    )\n\n    this.process = execa.node(tmpFileName, args, {\n      env: {\n        FORCE_COLOR: `1`,\n        GATSBY_NODE_GLOBALS: JSON.stringify(global.__GATSBY ?? {}),\n        NODE_ENV: process.env.NODE_ENV,\n        ...options.env,\n      },\n      stdio: [`ignore`, `pipe`, `pipe`, `ipc`],\n      cwd: options.directory,\n      nodeOptions: [`--enable-source-maps`, ...defaultExecArgv],\n    })\n\n    if (!this.process.stdout || !this.process.stderr) {\n      // to make TS happy\n      throw new Error(\n        `Somehow the process is undefined immediately after starting it`\n      )\n    }\n\n    this.process.stdout.pipe(process.stdout)\n    this.process.stderr.pipe(process.stderr)\n\n    // Write the pid to a file so we can kill it later if it becomes a zombie process\n    if (this.process?.pid) {\n      const pidDir = path.join(dirname, `pids`)\n      fs.ensureDirSync(pidDir)\n      fs.writeFileSync(\n        path.join(pidDir + `/${processName}.pid`),\n        this.process.pid.toString()\n      )\n    }\n  }\n  stop(signal: NodeJS.Signals | null = null, code?: number): Promise<void> {\n    if (!this.process) {\n      throw new Error(`Trying to stop the process before starting it`)\n    }\n\n    let killTimeout: NodeJS.Timeout\n\n    try {\n      if (signal) {\n        this.process.kill(signal)\n      } else {\n        // If the process doesn't exit within 1 second, kill it\n        killTimeout = setTimeout(() => {\n          if (this.process) {\n            const killWith = typeof code === `undefined` ? `SIGKILL` : code\n            this.process.kill(killWith)\n          }\n        }, 1000)\n\n        this.process.send(\n          {\n            type: `COMMAND`,\n            action: {\n              type: `EXIT`,\n              payload: code,\n            },\n          },\n          () => {\n            // The try/catch won't suffice for this process.send\n            // So use the callback to manually catch the Error, otherwise it'll be thrown\n            // Ref: https://nodejs.org/api/child_process.html#child_process_subprocess_send_message_sendhandle_options_callback\n          }\n        )\n      }\n    } catch (err) {\n      // Ignore error if process has crashed or already quit.\n      // Ref: https://github.com/gatsbyjs/gatsby/issues/28011#issuecomment-877302917\n    }\n\n    return new Promise(resolve => {\n      if (!this.process) {\n        throw new Error(`Trying to stop the process before starting it`)\n      }\n\n      this.process.on(`exit`, () => {\n        if (this.process) {\n          this.process.removeAllListeners()\n        }\n\n        if (killTimeout) clearTimeout(killTimeout)\n\n        this.process = undefined\n        this.isRunning = false\n        resolve()\n      })\n    })\n  }\n  onMessage(callback: (msg: any) => void): void {\n    if (!this.process) {\n      throw new Error(`Trying to attach message handler before process started`)\n    }\n    this.process.on(`message`, callback)\n  }\n  offMessage(callback: (msg: any) => void): void {\n    if (!this.process) {\n      throw new Error(`Trying to detach message handler before process started`)\n    }\n    this.process.off(`message`, callback)\n  }\n  onExit(\n    callback: (code: number | null, signal: NodeJS.Signals | null) => void\n  ): void {\n    if (!this.process) {\n      throw new Error(`Trying to attach exit handler before process started`)\n    }\n    this.process.on(`exit`, callback)\n  }\n  offExit(\n    callback: (code: number | null, signal: NodeJS.Signals | null) => void\n  ): void {\n    if (!this.process) {\n      throw new Error(`Trying to detach exit handler before process started`)\n    }\n    this.process.off(`exit`, callback)\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  send(msg: any): void {\n    if (!this.process) {\n      throw new Error(`Trying to send a message before process started`)\n    }\n\n    this.process.send(msg)\n  }\n}\n\nlet isRestarting\n\nexport const exampleImpl = async (program: IProgram): Promise<void> => {\n  global.__GATSBY = {\n    buildId: v4(),\n    root: program.directory,\n  }\n\n  // In some cases, port can actually be a string. But our codebase is expecting it to be a number.\n  // So we want to early just force it to a number to ensure we always act on a correct type.\n  program.port = parseInt(program.port + ``, 10)\n  const developProcessPath = slash(require.resolve(`./develop-process`))\n\n  try {\n    program.port = await detectPortInUseAndPrompt(program.port, program.host)\n  } catch (e) {\n    if (e.message === `USER_REJECTED`) {\n      process.exit(0)\n    }\n\n    throw e\n  }\n\n  // Run the actual develop server on a random port, and the proxy on the program port\n  // which users will access\n  const debugInfo = getDebugInfo(program)\n\n  const developPort = program.port\n\n  // In order to enable custom ssl, --cert-file --key-file and -https flags must all be\n  // used together\n  if ((program[`cert-file`] || program[`key-file`]) && !program.https) {\n    reporter.panic(\n      `for custom ssl --https, --cert-file, and --key-file must be used together`\n    )\n  }\n\n  // Check if https is enabled, then create or get SSL cert.\n  // Certs are named 'devcert' and issued to the host.\n  // NOTE(@mxstbr): We mutate program.ssl _after_ passing it\n  // to the develop process controllable script above because\n  // that would mean we double SSL browser => proxy => server\n  if (program.https) {\n    const sslHost =\n      program.host === `0.0.0.0` || program.host === `::`\n        ? `localhost`\n        : program.host\n\n    const ssl = await getSslCert({\n      name: sslHost,\n      caFile: program[`ca-file`],\n      certFile: program[`cert-file`],\n      keyFile: program[`key-file`],\n      directory: program.directory,\n    })\n\n    if (ssl) {\n      program.ssl = ssl\n    }\n  }\n\n  const developProcess = new ControllableScript(\n    `\n    const cmd = require(${JSON.stringify(developProcessPath)});\n    const args = ${JSON.stringify({\n      ...program,\n      port: developPort,\n      // TODO(v5): remove\n      proxyPort: developPort,\n      debugInfo,\n    })};\n    cmd(args);\n  `,\n    debugInfo\n  )\n\n  const handleChildProcessIPC = (msg): void => {\n    if (msg.type === `HEARTBEAT`) return\n    if (process.send) {\n      // Forward IPC\n      process.send(msg)\n    }\n  }\n\n  developProcess.start()\n  developProcess.onMessage(handleChildProcessIPC)\n\n  // Plugins can call `process.exit` which would be sent to `develop-process` (child process)\n  // This needs to be propagated back to the parent process\n  developProcess.onExit(\n    (code: number | null, signal: NodeJS.Signals | null) => {\n      if (isRestarting) return\n\n      if (signal !== null) {\n        process.kill(process.pid, signal)\n        return\n      }\n\n      if (code !== null) {\n        process.exit(code)\n      }\n\n      // This should not happen:\n      // https://nodejs.org/api/child_process.html#child_process_event_exit\n      // The 'exit' event is emitted after the child process ends. If the process\n      // exited, code is the final exit code of the process, otherwise null.\n      // If the process terminated due to receipt of a signal, signal is the\n      // string name of the signal, otherwise null. One of the two will always be\n      // non - null.\n      //\n      // but just in case let do non-zero exit, because we are in situation\n      // we don't expect to be possible\n      process.exit(1)\n    }\n  )\n\n  // route ipc messaging to the original develop process\n  process.on(`message`, msg => {\n    developProcess.send(msg)\n  })\n\n  process.on(`SIGINT`, async () => {\n    await shutdownServices(\n      {\n        developProcess,\n      },\n      `SIGINT`\n    )\n\n    process.exit(0)\n  })\n\n  process.on(`SIGTERM`, async () => {\n    await shutdownServices(\n      {\n        developProcess,\n      },\n      `SIGTERM`\n    )\n\n    process.exit(0)\n  })\n\n  onExit((_code, signal) => {\n    shutdownServices(\n      {\n        developProcess,\n      },\n      signal as NodeJS.Signals\n    )\n  })\n}\n\ninterface IShutdownServicesOptions {\n  developProcess: ControllableScript\n}\n\nfunction shutdownServices(\n  { developProcess }: IShutdownServicesOptions,\n  signal: NodeJS.Signals\n): Promise<void> {\n  const services = [developProcess.stop(signal)]\n\n  return Promise.all(services)\n    .catch(() => {})\n    .then(() => {})\n}\n"],"mappings":";;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA,MAAMA,YAAY,GAAIC,IAAa,IAAaA,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAI,IAAI;AAErD,MAAMC,YAAY,GAAIC,OAAiB,IAAwB;EACpE,IAAIC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,OAAO,EAAG,SAAQ,CAAC,EAAE;IAC5D,OAAO;MACLF,IAAI,EAAED,YAAY,CAACG,OAAO,CAACK,OAAO,CAAC;MACnCC,KAAK,EAAE;IACT,CAAC;EACH,CAAC,MAAM,IAAIL,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,OAAO,EAAG,YAAW,CAAC,EAAE;IACtE,OAAO;MACLF,IAAI,EAAED,YAAY,CAACG,OAAO,CAACO,UAAU,CAAC;MACtCD,KAAK,EAAE;IACT,CAAC;EACH,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF,CAAC;AAAA;AAEM,MAAME,kBAAkB,CAAC;EAM9BC,WAAW,CAACC,MAAM,EAAEC,SAA4B,EAAE;IAChD,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC5B;;EAEA;EACAC,eAAe,CAACC,WAAmB,EAAEC,SAAiB,EAAE;IACtD,MAAMC,OAAO,GAAGC,aAAI,CAACC,IAAI,CAACH,SAAS,EAAG,QAAO,CAAC;IAC9C,MAAMI,WAAW,GAAGH,OAAO,GAAI,SAAQF,WAAY,MAAK;IAExD,IAAIM,gBAAE,CAACC,UAAU,CAACF,WAAW,CAAC,EAAE;MAC9B,MAAMG,GAAG,GAAGF,gBAAE,CAACG,YAAY,CAACJ,WAAW,EAAG,OAAM,CAAC;MACjD,IAAIG,GAAG,EAAE;QACPE,UAAU,CAAC,MAAM;UACf,IAAI;YACFC,OAAO,CAACC,IAAI,CAACC,MAAM,CAACL,GAAG,CAAC,EAAG,SAAQ,CAAC;YACpCM,OAAO,CAACC,IAAI,CACT,2CAA0CP,GAAI,QAAOR,WAAY,yEAAwE,CAC3I;UACH,CAAC,CAAC,OAAOgB,CAAC,EAAE;YACV;UAAA;UAEF;QACF,CAAC,EAAE,GAAG,CAAC;MACT;IACF;EACF;EAEAC,KAAK,CAACC,OAA8D,EAAQ;IAAA;IAC1E,IAAI,CAACA,OAAO,EAAE;MACZA,OAAO,GAAG,CAAC,CAAC;IACd;IAEA,IAAI,CAACA,OAAO,CAACC,GAAG,EAAE;MAChBD,OAAO,CAACC,GAAG,GAAG,CAAC,CAAC;IAClB;IAEA,IAAI,CAACD,OAAO,CAACjB,SAAS,EAAE;MACtBiB,OAAO,CAACjB,SAAS,GAAGU,OAAO,CAACS,GAAG,EAAE;IACnC;IAEA,MAAMC,IAAmB,GAAG,EAAE;IAE9B,MAAMnB,OAAO,GAAGC,aAAI,CAACC,IAAI,CAACc,OAAO,CAACjB,SAAS,EAAG,QAAO,CAAC;IACtD,MAAMD,WAAW,GAAI,0BAAyB,IAAAsB,cAAG,EAACpB,OAAO,CAAE,EAAC;IAC5D,MAAMqB,WAAW,GAAGpB,aAAI,CAACC,IAAI,CAACF,OAAO,EAAG,GAAEF,WAAY,MAAK,CAAC;IAE5D,IAAI,CAACD,eAAe,CAACC,WAAW,EAAEkB,OAAO,CAACjB,SAAS,CAAC;IAEpDK,gBAAE,CAACkB,cAAc,CAACD,WAAW,EAAE,IAAI,CAAC1B,MAAM,CAAC;IAC3C,IAAI,CAAC4B,SAAS,GAAG,IAAI;IACrB;IACA,IAAI,IAAI,CAAC3B,SAAS,EAAE;MAClB,IAAI,IAAI,CAACA,SAAS,CAACL,KAAK,EAAE;QACxB4B,IAAI,CAACK,IAAI,CAAE,iBAAgB,IAAI,CAAC5B,SAAS,CAACb,IAAK,EAAC,CAAC;MACnD,CAAC,MAAM;QACLoC,IAAI,CAACK,IAAI,CAAE,aAAY,IAAI,CAAC5B,SAAS,CAACb,IAAK,EAAC,CAAC;MAC/C;IACF;IAEA,MAAM0C,eAAe,GAAGhB,OAAO,CAACiB,QAAQ,CAACC,MAAM,CAC7CC,GAAG,IAAI,CAACA,GAAG,CAACC,UAAU,CAAE,WAAU,CAAC,CACpC;IAED,IAAI,CAACpB,OAAO,GAAGqB,cAAK,CAACC,IAAI,CAACV,WAAW,EAAEF,IAAI,EAAE;MAC3CF,GAAG,EAAE;QACHe,WAAW,EAAG,GAAE;QAChBC,mBAAmB,EAAEC,IAAI,CAACC,SAAS,qBAACC,MAAM,CAACC,QAAQ,+DAAI,CAAC,CAAC,CAAC;QAC1DC,QAAQ,EAAE7B,OAAO,CAACQ,GAAG,CAACqB,QAAQ;QAC9B,GAAGtB,OAAO,CAACC;MACb,CAAC;MACDsB,KAAK,EAAE,CAAE,QAAO,EAAG,MAAK,EAAG,MAAK,EAAG,KAAI,CAAC;MACxCrB,GAAG,EAAEF,OAAO,CAACjB,SAAS;MACtByC,WAAW,EAAE,CAAE,sBAAqB,EAAE,GAAGf,eAAe;IAC1D,CAAC,CAAC;IAEF,IAAI,CAAC,IAAI,CAAChB,OAAO,CAACgC,MAAM,IAAI,CAAC,IAAI,CAAChC,OAAO,CAACiC,MAAM,EAAE;MAChD;MACA,MAAM,IAAIC,KAAK,CACZ,gEAA+D,CACjE;IACH;IAEA,IAAI,CAAClC,OAAO,CAACgC,MAAM,CAACG,IAAI,CAACnC,OAAO,CAACgC,MAAM,CAAC;IACxC,IAAI,CAAChC,OAAO,CAACiC,MAAM,CAACE,IAAI,CAACnC,OAAO,CAACiC,MAAM,CAAC;;IAExC;IACA,qBAAI,IAAI,CAACjC,OAAO,0CAAZ,cAAcH,GAAG,EAAE;MACrB,MAAMuC,MAAM,GAAG5C,aAAI,CAACC,IAAI,CAACF,OAAO,EAAG,MAAK,CAAC;MACzCI,gBAAE,CAAC0C,aAAa,CAACD,MAAM,CAAC;MACxBzC,gBAAE,CAAC2C,aAAa,CACd9C,aAAI,CAACC,IAAI,CAAC2C,MAAM,GAAI,IAAG/C,WAAY,MAAK,CAAC,EACzC,IAAI,CAACW,OAAO,CAACH,GAAG,CAAC0C,QAAQ,EAAE,CAC5B;IACH;EACF;EACAC,IAAI,CAACC,MAA6B,GAAG,IAAI,EAAEC,IAAa,EAAiB;IACvE,IAAI,CAAC,IAAI,CAAC1C,OAAO,EAAE;MACjB,MAAM,IAAIkC,KAAK,CAAE,+CAA8C,CAAC;IAClE;IAEA,IAAIS,WAA2B;IAE/B,IAAI;MACF,IAAIF,MAAM,EAAE;QACV,IAAI,CAACzC,OAAO,CAACC,IAAI,CAACwC,MAAM,CAAC;MAC3B,CAAC,MAAM;QACL;QACAE,WAAW,GAAG5C,UAAU,CAAC,MAAM;UAC7B,IAAI,IAAI,CAACC,OAAO,EAAE;YAChB,MAAM4C,QAAQ,GAAG,OAAOF,IAAI,KAAM,WAAU,GAAI,SAAQ,GAAGA,IAAI;YAC/D,IAAI,CAAC1C,OAAO,CAACC,IAAI,CAAC2C,QAAQ,CAAC;UAC7B;QACF,CAAC,EAAE,IAAI,CAAC;QAER,IAAI,CAAC5C,OAAO,CAAC6C,IAAI,CACf;UACEC,IAAI,EAAG,SAAQ;UACfC,MAAM,EAAE;YACND,IAAI,EAAG,MAAK;YACZE,OAAO,EAAEN;UACX;QACF,CAAC,EACD,MAAM;UACJ;UACA;UACA;QAAA,CACD,CACF;MACH;IACF,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZ;MACA;IAAA;IAGF,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;MAC5B,IAAI,CAAC,IAAI,CAACnD,OAAO,EAAE;QACjB,MAAM,IAAIkC,KAAK,CAAE,+CAA8C,CAAC;MAClE;MAEA,IAAI,CAAClC,OAAO,CAACoD,EAAE,CAAE,MAAK,EAAE,MAAM;QAC5B,IAAI,IAAI,CAACpD,OAAO,EAAE;UAChB,IAAI,CAACA,OAAO,CAACqD,kBAAkB,EAAE;QACnC;QAEA,IAAIV,WAAW,EAAEW,YAAY,CAACX,WAAW,CAAC;QAE1C,IAAI,CAAC3C,OAAO,GAAGuD,SAAS;QACxB,IAAI,CAACzC,SAAS,GAAG,KAAK;QACtBqC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACAK,SAAS,CAACC,QAA4B,EAAQ;IAC5C,IAAI,CAAC,IAAI,CAACzD,OAAO,EAAE;MACjB,MAAM,IAAIkC,KAAK,CAAE,yDAAwD,CAAC;IAC5E;IACA,IAAI,CAAClC,OAAO,CAACoD,EAAE,CAAE,SAAQ,EAAEK,QAAQ,CAAC;EACtC;EACAC,UAAU,CAACD,QAA4B,EAAQ;IAC7C,IAAI,CAAC,IAAI,CAACzD,OAAO,EAAE;MACjB,MAAM,IAAIkC,KAAK,CAAE,yDAAwD,CAAC;IAC5E;IACA,IAAI,CAAClC,OAAO,CAAC2D,GAAG,CAAE,SAAQ,EAAEF,QAAQ,CAAC;EACvC;EACAG,MAAM,CACJH,QAAsE,EAChE;IACN,IAAI,CAAC,IAAI,CAACzD,OAAO,EAAE;MACjB,MAAM,IAAIkC,KAAK,CAAE,sDAAqD,CAAC;IACzE;IACA,IAAI,CAAClC,OAAO,CAACoD,EAAE,CAAE,MAAK,EAAEK,QAAQ,CAAC;EACnC;EACAI,OAAO,CACLJ,QAAsE,EAChE;IACN,IAAI,CAAC,IAAI,CAACzD,OAAO,EAAE;MACjB,MAAM,IAAIkC,KAAK,CAAE,sDAAqD,CAAC;IACzE;IACA,IAAI,CAAClC,OAAO,CAAC2D,GAAG,CAAE,MAAK,EAAEF,QAAQ,CAAC;EACpC;EACA;EACAZ,IAAI,CAACiB,GAAQ,EAAQ;IACnB,IAAI,CAAC,IAAI,CAAC9D,OAAO,EAAE;MACjB,MAAM,IAAIkC,KAAK,CAAE,iDAAgD,CAAC;IACpE;IAEA,IAAI,CAAClC,OAAO,CAAC6C,IAAI,CAACiB,GAAG,CAAC;EACxB;AACF;AAAC;AAED,IAAIC,YAAY;AAET,MAAMC,WAAW,GAAG,MAAOxF,OAAiB,IAAoB;EACrEmD,MAAM,CAACC,QAAQ,GAAG;IAChBqC,OAAO,EAAE,IAAAC,QAAE,GAAE;IACbC,IAAI,EAAE3F,OAAO,CAACc;EAChB,CAAC;;EAED;EACA;EACAd,OAAO,CAACF,IAAI,GAAG8F,QAAQ,CAAC5F,OAAO,CAACF,IAAI,GAAI,EAAC,EAAE,EAAE,CAAC;EAC9C,MAAM+F,kBAAkB,GAAG,IAAAC,gBAAK,EAACC,OAAO,CAACpB,OAAO,CAAE,mBAAkB,CAAC,CAAC;EAEtE,IAAI;IACF3E,OAAO,CAACF,IAAI,GAAG,MAAM,IAAAkG,kDAAwB,EAAChG,OAAO,CAACF,IAAI,EAAEE,OAAO,CAACiG,IAAI,CAAC;EAC3E,CAAC,CAAC,OAAOpE,CAAC,EAAE;IACV,IAAIA,CAAC,CAACqE,OAAO,KAAM,eAAc,EAAE;MACjC1E,OAAO,CAAC2E,IAAI,CAAC,CAAC,CAAC;IACjB;IAEA,MAAMtE,CAAC;EACT;;EAEA;EACA;EACA,MAAMlB,SAAS,GAAGZ,YAAY,CAACC,OAAO,CAAC;EAEvC,MAAMoG,WAAW,GAAGpG,OAAO,CAACF,IAAI;;EAEhC;EACA;EACA,IAAI,CAACE,OAAO,CAAE,WAAU,CAAC,IAAIA,OAAO,CAAE,UAAS,CAAC,KAAK,CAACA,OAAO,CAACqG,KAAK,EAAE;IACnEC,iBAAQ,CAACC,KAAK,CACX,2EAA0E,CAC5E;EACH;;EAEA;EACA;EACA;EACA;EACA;EACA,IAAIvG,OAAO,CAACqG,KAAK,EAAE;IACjB,MAAMG,OAAO,GACXxG,OAAO,CAACiG,IAAI,KAAM,SAAQ,IAAIjG,OAAO,CAACiG,IAAI,KAAM,IAAG,GAC9C,WAAU,GACXjG,OAAO,CAACiG,IAAI;IAElB,MAAMQ,GAAG,GAAG,MAAM,IAAAC,sBAAU,EAAC;MAC3BC,IAAI,EAAEH,OAAO;MACbI,MAAM,EAAE5G,OAAO,CAAE,SAAQ,CAAC;MAC1B6G,QAAQ,EAAE7G,OAAO,CAAE,WAAU,CAAC;MAC9B8G,OAAO,EAAE9G,OAAO,CAAE,UAAS,CAAC;MAC5Bc,SAAS,EAAEd,OAAO,CAACc;IACrB,CAAC,CAAC;IAEF,IAAI2F,GAAG,EAAE;MACPzG,OAAO,CAACyG,GAAG,GAAGA,GAAG;IACnB;EACF;EAEA,MAAMM,cAAc,GAAG,IAAIvG,kBAAkB,CAC1C;AACL,0BAA0ByC,IAAI,CAACC,SAAS,CAAC2C,kBAAkB,CAAE;AAC7D,mBAAmB5C,IAAI,CAACC,SAAS,CAAC;IAC5B,GAAGlD,OAAO;IACVF,IAAI,EAAEsG,WAAW;IACjB;IACAY,SAAS,EAAEZ,WAAW;IACtBzF;EACF,CAAC,CAAE;AACP;AACA,GAAG,EACCA,SAAS,CACV;EAED,MAAMsG,qBAAqB,GAAI3B,GAAG,IAAW;IAC3C,IAAIA,GAAG,CAAChB,IAAI,KAAM,WAAU,EAAE;IAC9B,IAAI9C,OAAO,CAAC6C,IAAI,EAAE;MAChB;MACA7C,OAAO,CAAC6C,IAAI,CAACiB,GAAG,CAAC;IACnB;EACF,CAAC;EAEDyB,cAAc,CAACjF,KAAK,EAAE;EACtBiF,cAAc,CAAC/B,SAAS,CAACiC,qBAAqB,CAAC;;EAE/C;EACA;EACAF,cAAc,CAAC3B,MAAM,CACnB,CAAClB,IAAmB,EAAED,MAA6B,KAAK;IACtD,IAAIsB,YAAY,EAAE;IAElB,IAAItB,MAAM,KAAK,IAAI,EAAE;MACnBzC,OAAO,CAACC,IAAI,CAACD,OAAO,CAACH,GAAG,EAAE4C,MAAM,CAAC;MACjC;IACF;IAEA,IAAIC,IAAI,KAAK,IAAI,EAAE;MACjB1C,OAAO,CAAC2E,IAAI,CAACjC,IAAI,CAAC;IACpB;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA1C,OAAO,CAAC2E,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC,CACF;;EAED;EACA3E,OAAO,CAACoD,EAAE,CAAE,SAAQ,EAAEU,GAAG,IAAI;IAC3ByB,cAAc,CAAC1C,IAAI,CAACiB,GAAG,CAAC;EAC1B,CAAC,CAAC;EAEF9D,OAAO,CAACoD,EAAE,CAAE,QAAO,EAAE,YAAY;IAC/B,MAAMsC,gBAAgB,CACpB;MACEH;IACF,CAAC,EACA,QAAO,CACT;IAEDvF,OAAO,CAAC2E,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC;EAEF3E,OAAO,CAACoD,EAAE,CAAE,SAAQ,EAAE,YAAY;IAChC,MAAMsC,gBAAgB,CACpB;MACEH;IACF,CAAC,EACA,SAAQ,CACV;IAEDvF,OAAO,CAAC2E,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC;EAEF,IAAAf,mBAAM,EAAC,CAAC+B,KAAK,EAAElD,MAAM,KAAK;IACxBiD,gBAAgB,CACd;MACEH;IACF,CAAC,EACD9C,MAAM,CACP;EACH,CAAC,CAAC;AACJ,CAAC;AAAA;AAMD,SAASiD,gBAAgB,CACvB;EAAEH;AAAyC,CAAC,EAC5C9C,MAAsB,EACP;EACf,MAAMmD,QAAQ,GAAG,CAACL,cAAc,CAAC/C,IAAI,CAACC,MAAM,CAAC,CAAC;EAE9C,OAAOS,OAAO,CAAC2C,GAAG,CAACD,QAAQ,CAAC,CACzBE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CACfC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACnB"}