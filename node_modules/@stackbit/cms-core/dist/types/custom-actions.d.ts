import { CustomActionGlobal, CustomActionBulk, CustomActionDocument, CustomActionObjectModel, CustomActionObjectField, CustomActionField, CustomActionState, CustomActionInputField } from '@stackbit/types';
import { User } from './index';
export declare type CustomActionRunStateMap = Record<string, CustomActionRunState>;
export declare type CustomActionRunState = {
    runningHandler?: boolean;
    lastResultState?: CustomActionState;
};
export declare type ExtendedCustomAction = ExtendedCustomActionGlobal | ExtendedCustomActionBulk | ExtendedCustomActionDocument | ExtendedCustomActionObjectModel | ExtendedCustomActionObjectField | ExtendedCustomActionField;
export declare type ExtendedCustomActionGlobal = CustomActionGlobal & ContentStoreCustomActionCommonProps;
export declare type ExtendedCustomActionBulk = CustomActionBulk & ContentStoreCustomActionCommonProps;
export declare type ExtendedCustomActionDocument = CustomActionDocument & ContentStoreCustomActionCommonProps & {
    type: 'document';
    documentSpec: APICustomActionDocumentSpecifier;
};
export declare type ExtendedCustomActionObjectModel = CustomActionObjectModel & ContentStoreCustomActionCommonProps & {
    type: 'objectModel';
    documentSpec: APICustomActionDocumentSpecifier;
    fieldPath: (string | number)[];
};
export declare type ExtendedCustomActionObjectField = Omit<CustomActionObjectField, 'type'> & ContentStoreCustomActionCommonProps & {
    type: 'objectField';
    documentSpec: APICustomActionDocumentSpecifier;
    fieldPath: (string | number)[];
};
export declare type ExtendedCustomActionField = CustomActionField & ContentStoreCustomActionCommonProps & {
    type: 'field';
    documentSpec: APICustomActionDocumentSpecifier;
    fieldPath: (string | number)[];
};
export declare type ContentStoreCustomActionCommonProps = {
    type: string;
    actionId: string;
    label: string;
    runningHandler?: boolean;
    lastResultState?: CustomActionState;
};
export declare type CustomActionType = 'global' | 'bulk' | 'document' | 'object' | 'field';
export declare type APICustomAction = APICustomActionGlobal | APICustomActionBulk | APICustomActionDocument | APICustomActionObject | APICustomActionField;
export interface APICustomActionGlobal extends APICustomActionCommonProps {
    type: 'global';
}
export interface APICustomActionBulk extends APICustomActionCommonProps {
    type: 'bulk';
}
export interface APICustomActionDocument extends APICustomActionCommonProps {
    type: 'document';
}
export interface APICustomActionObject extends APICustomActionCommonProps {
    type: 'object';
}
export interface APICustomActionField extends APICustomActionCommonProps {
    type: 'field';
}
export interface APICustomActionCommonProps {
    type: CustomActionType;
    actionId: string;
    name: string;
    label: string;
    icon?: string;
    state: CustomActionState | 'unknown';
    inputFields?: CustomActionInputField[];
    needsResolving?: boolean;
}
export declare type APIRunCustomActionRequest = APIRunCustomActionRequestGlobal | APIRunCustomActionRequestBulk | APIRunCustomActionRequestDocument | APIRunCustomActionRequestObject | APIRunCustomActionRequestField;
export interface APIRunCustomActionRequestGlobal extends APIRunCustomActionRequestCommonParams {
    actionType: 'global';
}
export interface APIRunCustomActionRequestBulk extends APIRunCustomActionRequestCommonParams {
    actionType: 'bulk';
    documents: APICustomActionDocumentSpecifier[];
}
export interface APIRunCustomActionRequestDocument extends APIRunCustomActionRequestCommonParams {
    actionType: 'document';
}
export interface APIRunCustomActionRequestObject extends APIRunCustomActionRequestCommonParams {
    actionType: 'object';
}
export interface APIRunCustomActionRequestField extends APIRunCustomActionRequestCommonParams {
    actionType: 'field';
}
interface APIRunCustomActionRequestCommonParams {
    actionType: string;
    actionId: string;
    actionName: string;
    locale?: string;
    user?: User;
    pageUrl?: string;
    currentPageDocument?: APICustomActionDocumentSpecifier;
    inputData?: Record<string, any>;
}
export interface APIGetCustomActionRequest {
    customActionIds: string[];
    locale?: string;
    user?: User;
    pageUrl?: string;
    currentPageDocument?: APICustomActionDocumentSpecifier;
}
export interface APICustomActionDocumentSpecifier {
    srcType: string;
    srcProjectId: string;
    srcDocumentId: string;
}
export interface CustomActionStateChange {
    actionType: CustomActionType;
    actionId: string;
    actionName: string;
    state: CustomActionState;
    success?: string;
    error?: string;
}
export {};
//# sourceMappingURL=custom-actions.d.ts.map