import type { Field, FieldList, FieldListItems, FieldType } from './model-fields';
export declare type UpdateOperation = UpdateOperationSet | UpdateOperationUnset | UpdateOperationInsert | UpdateOperationRemove | UpdateOperationReorder;
export interface UpdateOperationBase {
    opType: string;
    fieldPath: (string | number)[];
    locale?: string;
}
export interface UpdateOperationSet extends UpdateOperationBase {
    opType: 'set';
    modelField: Field | FieldListItems;
    field: UpdateOperationField;
}
export interface UpdateOperationUnset extends UpdateOperationBase {
    opType: 'unset';
    modelField: Field | FieldListItems;
}
export interface UpdateOperationInsert extends UpdateOperationBase {
    opType: 'insert';
    modelField: FieldList;
    index?: number;
    item: UpdateOperationListFieldItem;
}
export interface UpdateOperationRemove extends UpdateOperationBase {
    opType: 'remove';
    modelField: FieldList;
    index: number;
}
export interface UpdateOperationReorder extends UpdateOperationBase {
    opType: 'reorder';
    modelField: FieldList;
    order: number[];
}
export declare type UpdateOperationField = UpdateOperationValueField | UpdateOperationObjectField | UpdateOperationModelField | UpdateOperationReferenceField | UpdateOperationListField;
export declare type UpdateOperationValueFieldType = Exclude<FieldType, 'object' | 'model' | 'reference' | 'list'>;
export declare type UpdateOperationValueField = DistributeUpdateOperationValueField<UpdateOperationValueFieldType>;
export declare type DistributeUpdateOperationValueField<Type extends UpdateOperationValueFieldType> = Type extends UpdateOperationValueFieldType ? UpdateOperationValueFieldForType<Type> : never;
export declare type UpdateOperationValueFieldForType<Type extends UpdateOperationValueFieldType> = {
    type: Type;
    value: any;
};
export declare type UpdateOperationObjectField = {
    type: 'object';
    fields: Record<string, UpdateOperationField>;
};
export declare type UpdateOperationModelField = {
    type: 'model';
    modelName: string;
    fields: Record<string, UpdateOperationField>;
};
export declare type UpdateOperationReferenceField = {
    type: 'reference';
    refType: 'document' | 'asset';
    refId: string;
};
export declare type UpdateOperationListField = {
    type: 'list';
    items: UpdateOperationListFieldItem[];
};
export declare type UpdateOperationListFieldItem = Exclude<UpdateOperationField, UpdateOperationListField>;
//# sourceMappingURL=content-source-operation.d.ts.map